term.setCursorBlink(false)
term.clear()
term.setCursorPos(1,1)
if not fs.exists( "/api/BFS" ) then
shell.run("wget","https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/apis/BasicFunctions","/api/BFS")
end
os.loadAPI("/api/BFS")
--BFS.dfa("https://raw.githubusercontent.com/oeed/Bedrock/master/Build/Bedrock", "https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/ThirdPartyBackups/Apis/Bedrock/Bedrock%20Build%3A%20548", "api/Bedrock")
--Eurobeat intensifies
if not fs.exists("/OS/Data/ProjectSecure/version") or not fs.exists("/OS/Data/ProjectSecure/.UserPref/update") then
BFS.verc("/OS/Data/ProjectSecure/version", "https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/version", "/OS/Data/ProjectSecure/.UserPref/update", "https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/update")
end
if not fs.exists("/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored8") then
shell.run("/OS/Data/ProjectSecure/.UserPref/update")
end
BFS.DiskS(false)
BFS.Comp_udid("/OS/Data/ProjectSecure/.UserPref/identification", "/OS/Data/ProjectSecure/.bootlogo/.Error")
BFS.udid("Panda_", "/OS/Data/ProjectSecure/.UserPref/identification")
function listcdwn()
term.clear()
rn = 8
rn2 = 1
if not fs.exists("/OS/Data/ProjectSecure/.bootlogo/.Error") then
BFS.df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/Bootlogo/Wrong", "/OS/Data/ProjectSecure/.bootlogo/.Error")
else
end
local id8 = fs.open("/OS/Data/ProjectSecure/.UserPref/identification", "r")
local id9 = id8.readAll()
if fs.exists("/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored"..rn2) then
BFS.dg("/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored"..rn2,.3)
if fs.exists( "/api/" ) and fs.isDir( "/api/" ) then
term.setCursorPos(1,1)
sleep(.3)
  local tFiles = fs.list( "/api/" )
  table.sort( tFiles )
  for n, sFile in ipairs( tFiles ) do
        if string.sub( sFile, 1, 1 ) ~= "." then
          local sPath = "/api/"..sFile
          if not fs.isDir( sPath ) then
                os.loadAPI( sPath )
                print("[API]:"..sPath)
                sleep(.3)
          end
        end
  end
end
if fs.exists( "/disk/api/" ) and fs.isDir( "/disk/api/" ) then
   zFiles = fs.list( "/disk/api/" )
  table.sort( zFiles )
  for n, pFiles in ipairs( zFiles ) do
        if string.sub( pFiles, 1, 1 ) ~= "." then
          local sPath = "/disk/api/"..pFiles
          if not fs.isDir( sPath ) then
                os.loadAPI( sPath )
                print("[API][Disk]:"..sPath)
                sleep(.3)
          end
        end
  end
end
end
for i=1,rn do
if not fs.exists("/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored"..rn) then
BFS.df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/Bootlogo/bootlogo"..rn, "/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored")
else
end
if fs.exists("/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored"..rn2) then
BFS.dg("/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored"..rn2,.1)
end
if not fs.exists("/OS/Data/ProjectSecure/desktop") then
BFS.df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/MenuUI", "/OS/Data/ProjectSecure/desktop","identification = ".."'"..id9.."'")
end
if not fs.exists("/OS/Data/ProjectSecure/.bootlogo/.LoginLogoPS") then
BFS.df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/Bootlogo/loginbackground", "/OS/Data/ProjectSecure/.bootlogo/.LoginLogoPS")
os.reboot()
end
rn = rn-1
rn2 = rn2+1
end
end


listcdwn()
BFS.md("/OS/Data/ProjectSecure/.UserPref")

function LockSC()
if fs.exists("/OS/Data/ProjectSecure/.UserPref/Usn") then
BFS.dg("/OS/Data/ProjectSecure/.bootlogo/.LoginLogoPS",0)
local readusrn = fs.open("/OS/Data/ProjectSecure/.UserPref/Usn", "r")
readusern = readusrn.readAll()
readusrn.close()
else
BFS.dg("/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored8",0)
term.setCursorPos(1,1)
print("[SETUP] Please enter your name.")
createusn = read()
Usn = fs.open("/OS/Data/ProjectSecure/.UserPref/Usn", "w")
Usn.write(createusn)
Usn.close()
end

if fs.exists("/OS/Data/ProjectSecure/.UserPref/Pswd") then
local readusrpwd = fs.open("/OS/Data/ProjectSecure/.UserPref/Pswd", "r")
local readuserpwd = readusrpwd.readAll()
readusrpwd.close()
term.setCursorPos(15,14)
print(readusern)
BFS.dply(1,1)
BFS.tpla(1,2,"[Project Secure] Version:")
BFS.readfile(26,2,"/OS/Data/ProjectSecure/version")
term.setCursorPos(15,16)
usrpwd = read("*")
	if usrpwd == readuserpwd then
	os.run({},"/OS/Data/ProjectSecure/desktop")
	else
	LockSC()
	end
else
BFS.dg("/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored8",0)
term.setCursorPos(1,1)
print("[SETUP] Please enter a password.")
createpwd = read()
rpwd = fs.open("/OS/Data/ProjectSecure/.UserPref/Pswd", "w")
rpwd.write(createpwd)
rpwd.close()
BFS.sdc(1,18)
end
end
LockSC()
