--STARTUP
os.pullEvent = os.pullEventRaw
local Make_Computers_great_again = settings.get("shell.allow_disk_startup", "not set")
print(Make_Computers_great_again)
if Make_Computers_great_again == true then
settings.set("shell.allow_disk_startup", false)
settings.save(".settings")
end
if fs.exists( "OS/Data/SecureOS/Temp/update" ) and fs.exists( "/OS/LoadOS/SecureOS" ) then 
term.clear()
shell.run("OS/Data/SecureOS/Temp/update")
end
function ban()
term.clear()
local function Download(url, path)
for i = 1, 3 do
local response = http.get(url)
if response then
local data = response.readAll()
if path then
local f = io.open(path, "w")
f:write(data)
f:close()
end
return true
end
end
return false
end	
fs.delete("/startup")
fs.delete("/Essentials/CVG.txt")
Download("https://raw.githubusercontent.com/super12298/operating-systems/master/SecureOS_2/bootmenu/OLD/Startup", "/startup")
os.reboot()
end

term.clear()
local function Download(url, path)
for i = 1, 3 do
local response = http.get(url)
if response then
local data = response.readAll()
if path then
local f = io.open(path, "w")
f:write(data)
f:close()
end
return true
end
end
return false
end	
if fs.exists( "/Essentials/CVG.txt" ) then
shell.run("/Essentials/CVG.txt")
if debug == true then
nQues = -15
end
else
print("Checking...")
local tempe = fs.open("/Essentials/CVG.txt", "w")
local readthisa = http.get("https://raw.githubusercontent.com/super12298/operating-systems/master/SecureOS_2/bootmenu/CVG")
local realcfgftw = readthisa.readAll()
tempe.write(realcfgftw)
tempe.close()
os.reboot()
end

if term.isColor() and not turtle then
term.setTextColor(colors.red)
end
while true do
if term.isColor() and not turtle then
term.setBackgroundColor(colors.black)
end
term.setCursorPos(1,1)
print("Loading "..countupd.."%")
if fs.exists("/Essentials/bios")then
shell.run("/Essentials/bios")
else
countupd=countupd+1
if countupd == 100 then
Download("https://raw.githubusercontent.com/super12298/operating-systems/master/SecureOS_2/bootmenu/bi0s%20startup", "/Essentials/bios")
end
if countupd > 100 then
if term.isColor() and not turtle then
term.setBackgroundColor(colors.green)
end

print("Error Bios Doesn't exist")
end
if countupd > 200 then
os.reboot()
end
end
end
os.shutdown()
