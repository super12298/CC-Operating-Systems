function df(url, path, wdl)
local check, msg = http.checkURL(url)
if not check then
write("Invalid URL: Error[" .. msg.."]")
else
if path == nul or path == "" or path == "/" then
write("Invalid Path")
else
	for i = 1, 3 do
	local response = http.get(url)
		if response then
		local data = response.readAll()
				if path then
				local f = io.open(path, "w")
				--print(url, wdl)
				sleep(.1)
				if wdl then
				f:write(wdl.."\n")
				end
				f:write(data)
				f:close()
				end
			return true
			end
		end
	return false
end
end
end
function dfa(original, backup, path)
local ch3ck, msag = http.checkURL(original)
if not fs.exists(path) then
if ch3ck then
df(original, path)
else
df(backup, path)
end
end
end
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/startup", "/startup")
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/apis/BasicFunctions", "/api/BFS")
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/Universal/apps/Store", "/OS/Data/Store/Launch")
fs.delete("api/Bedrock")
--dfa("https://raw.githubusercontent.com/oeed/Bedrock/master/Build/Bedrock", "https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/ThirdPartyBackups/Apis/Bedrock/Bedrock%20Build%3A%20548", "api/Bedrock")
fs.delete("/OS/Data/ProjectSecure/desktop")
local id8 = fs.open("/OS/Data/ProjectSecure/.UserPref/identification", "r")
local id9 = id8.readAll()
os.run({},"startup")
if not fs.exists("/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored1") then
print("False")
sleep(1)
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/Bootlogo/bootlogo1", "/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored1")
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/Bootlogo/bootlogo2", "/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored2")
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/Bootlogo/bootlogo3", "/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored3")
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/Bootlogo/bootlogo4", "/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored4")
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/Bootlogo/bootlogo5", "/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored5")
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/Bootlogo/bootlogo6", "/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored6")
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/Bootlogo/bootlogo7", "/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored7")
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/Bootlogo/bootlogo8", "/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored8")
end
if fs.exists("/OS/Data/ProjectSecure/.bootlogo/.bootlogoColored1") then
print("True")
sleep(1)
end
--[[
if identification == id9 then
df("https://raw.githubusercontent.com/super12298/CC-Operating-Systems/master/SecureOS/MenuUI", "/OS/Data/ProjectSecure/desktop","identification = "..id9)
else
if term.isColor() then
term.setTextColor(colors.red)
end
print("stop_messing_with_my_code:1: attempt to call nil")
sleep(3)
end
]]--
